Лабораторна робота №3
Налаштування дебагера, підключення до бази даних та використання інструментів візуалізації.
З практичної роботи №3 беремо і запускаємо наш проект.
Перевіремо нашу БД. Для цього вкладці Datebase відкриємо 
БД і перейдемо по шляху boilerplate@localhost-->boilerplate-->public-->tables-->users.
Тепер натиснемо на users і нам в усій красі видасть таблицю з користувачами.
users.png
1. Запити 
Перед поальшою роботоую встановимо деякі залежності, а саме cross-env для коректної роботи проекту.
Виконаємо комвнду npm install cross-env --save-dev
Переглянемо структуру нашого проекту і замітимо каталог postman 
у якому є 2 файли.
postman_dir.png
Тепер відкриваємо Postman. Тепер безпосередньо у нашому Postman
ми імпортуємо наші файли з директорії postman.
postman_import.png
Після імпорту з'явилась колекція RESTful API Boilerplate
rest_api_collection.png
Тепер зробимо GET запит для усіх юзерів.
get_users_error.png
Як бачимо у нас помилка.
Перейдемо у Environments і натиснемо на кнопку Set active.
Тепер заново запускаємо GET запит для всіх юзерів.
404_error.png
Ця помилка каже нам, що сервак працює, і він розуміє наш запит.
Розбиремось зі системою роутів.
У WebStorm знаходемо каталог src, а у ньому каталог routes. 
routes.png
Відриємо файл index.ts і побачимо що, наш роутер використовує /v1 для конекта.
Тоді перейдемо  у наш Postman і у вкладці Environments і у колонці Current value додамо наш роутер /v1
current_value_v1.png
Тепер знову заходимо у колекції у папку /users і надаємо GET запит 
401_error.png
Так знову помилка. Тут проблема з токеном.
Тепер відправимо запит. Перейдемо у файл /auth і у /login надамо запит.
404_error_admin.png
Так тепер у цьому же файлі у рядку написати /auth/login. І знову надмо наш запит.
auth_login_send.png
Так запит відбувся і у нас токен змінився.
Тепер у паці /users надамо запит.
get_users.png 
І Еврика! Наш запит працює. Тепер сервер наш налаштований. Перейдемо до зв'язку з БД.

2. Дебагинг
Перейдемо у нашу IDE і заходимо у файл .env. Тут ми закоментуємо деякі рядки.
comment.png
Так тепер перейдемо у файл package.json і задебажимо dev.
debug.png
Усе БД законектився.